{"version":3,"sources":["app.module.js","home/home.module.js","layout/navbar.module.js","notes/notes-form/notes-form.module.js","notes/notes.module.js","profile/profile.module.js","sign-in/sign-in.module.js","sign-up/sign-up.module.js","users/users.module.js","classes.js","constants.js","core/auth/auth.interceptro.js","home/route-config.js","layout/navbar.directive.js","notes/notes-form/notes-form.controller.js","notes/notes.controller.js","notes/notes.service.js","notes/route-config.js","profile/profile-edit.controller.js","profile/profile-info.controller.js","profile/profile.controller.js","profile/route-config.js","sign-in/route-config.js","sign-in/sign-in.controller.js","sign-up/sign-up.directive.js","users/auth-token.service.js","users/current-user.service.js","users/route-config.js","users/users.service.js"],"names":[],"mappings":";;AAAA;AAAA,MAiBW,MAjBX,GAiBE,SAAS,MAAT,CAAgB,kBAAhB,EAAoC;AAClC,uBAAmB,SAAnB,CAA6B,SAA7B;AACD,GAnBH;;AACE,UAAQ,MAAR,CAAe,UAAf,EAA2B,CACzB,WADyB,EAEzB,SAFyB,EAGzB,aAHyB,EAIzB,gBAJyB,EAKzB,oBALyB,EAMzB,iBANyB,EAOzB,gBAPyB,EAQzB,iBARyB,EASzB,eATyB,EAUzB,kBAVyB,EAWzB,iBAXyB,CAA3B,EAaG,MAbH,CAaU,MAbV;;AAeA,SAAO,OAAP,GAAiB,CAAC,oBAAD,CAAjB;AAID;;;ACpBD;AACI,YAAQ,MAAR,CAAe,eAAf,EAAgC,EAAhC;AACH;;;ACFD;AACI,YAAQ,MAAR,CAAe,iBAAf,EAAkC,EAAlC;AACH;;;ACFD;AACE,UAAQ,MAAR,CAAe,oBAAf,EAAqC,EAArC;AACD;;;ACFD;AACE,UAAQ,MAAR,CAAe,gBAAf,EAAiC,EAAjC;AACD;;;ACFD;AACI,YAAQ,MAAR,CAAe,kBAAf,EAAmC,EAAnC;AACH;;;ACFD;AACI,YAAQ,MAAR,CAAe,iBAAf,EAAkC,EAAlC;AACH;;;ACFD;AACE,UAAQ,MAAR,CAAe,iBAAf,EAAkC,EAAlC;AACD;;;ACFD;AACE,UAAQ,MAAR,CAAe,gBAAf,EAAiC,EAAjC;AACD;;;;;;;ACFD;AACI,YAAQ,MAAR,CAAe,UAAf,EACK,OADL,CACa,QADb,EACuB,CAAC,SAAD,EAAY,mBAAW;AAAA,YAChC,MADgC;AAElC,4BAAY,IAAZ,EAAiB;AAAA;;AACb,qBAAK,IAAL,GAAY,IAAZ;AACA,qBAAK,KAAL,GAAa,IAAb;AACH;;AALiC;AAAA;AAAA,wCAqB3B;AACH,yBAAK,KAAL,GAAa,IAAb;AACA,4BAAQ,YAAR,CAAqB,UAArB,CAAgC,KAAK,IAArC;AACH;AAxBiC;AAAA;AAAA,kCAOzB,IAPyB,EAOpB;AACV,4BAAQ,YAAR,CAAqB,OAArB,CAA6B,KAAK,IAAlC,EACI,KAAK,SAAL,CAAe,EAAC,UAAD,EAAf,CADJ;AAEA,2BAAO,KAAK,KAAL,GAAa,IAApB;AACH,iBAXiC;AAAA,oCAaxB;AACN,yBAAK,KAAL,KAAe,IAAf,IACK,QAAQ,YAAR,CAAqB,OAArB,CAA6B,KAAK,IAAlC,MAA4C,IADjD,KAEK,KAAK,KAAL,GAAa,KAAK,KAAL,CAAW,QAAQ,YAAR,CAAqB,OAArB,CAA6B,KAAK,IAAlC,CAAX,EAAoD,IAFtE;;AAIA,2BAAO,KAAK,KAAZ;AACH;AAnBiC;;AAAA;AAAA;;AA2BtC,eAAO,MAAP;AACH,KA5BkB,CADvB;AA8BH;;;AC/BD;AACI,YAAQ,MAAR,CAAe,UAAf,EACK,QADL,CACc,UADd,EAC0B,2DAD1B;AAEH;;;ACHD;AAAA,QAMa,eANb,GAMI,SAAS,eAAT,CAAyB,SAAzB,EAAoC,QAApC,EAA6C;AACzC,eAAO;AACH,mBADG,mBACK,MADL,EACY;AACX,oBAAM,QAAQ,UAAU,KAAxB;;AAEA,oBAAG,SAAS,OAAO,GAAP,CAAW,QAAX,CAAoB,QAApB,CAAZ,EAA0C;AACtC,2BAAO,OAAP,CAAe,aAAf,GAA+B,KAA/B;AAEH;;AAED,uBAAO,MAAP;AACH;AAVE,SAAP;AAYH,KAnBL;;AAAA,QAsBa,iBAtBb,GAsBI,SAAS,iBAAT,CAA2B,aAA3B,EAAyC;AACrC,eAAO,cAAc,YAAd,CAA2B,IAA3B,CAAgC,iBAAhC,CAAP;AACH,KAxBL;;AACI,YAAQ,MAAR,CAAe,UAAf,EACK,OADL,CACa,iBADb,EACgC,eADhC,EAEK,MAFL,CAEY,iBAFZ;;AAIA,oBAAgB,OAAhB,GAA0B,CAAC,WAAD,EAAc,UAAd,CAA1B;;;AAgBA,sBAAkB,OAAlB,GAA4B,CAAC,eAAD,CAA5B;AAIH;;;ACzBD;AAAA,QAKa,UALb,GAKI,SAAS,UAAT,CAAoB,cAApB,EAAmC;AAC/B,uBAEC,KAFD,CAEO,MAFP,EAEe;AACX,iBAAK,OADM;AAEX,yBAAa;AAFF,SAFf;AAMH,KAZL;;AACI,YAAQ,MAAR,CAAe,eAAf,EACK,MADL,CACY,UADZ;;AAGA,eAAW,OAAX,GAAqB,CAAC,gBAAD,CAArB;AASH;;;;;;;ACbD;AACI,YAAQ,MAAR,CAAe,iBAAf,EACK,SADL,CACe,UADf,EAC2B,CAEvB,WAFuB,EAEV,aAFU,EAEK,QAFL,EAGvB,UAAC,SAAD,EAAY,WAAZ,EAA4B;AAAA,YAClB,gBADkB;AAEpB,wCAAc;AAAA;AAEb;;AAJmB;AAAA;AAAA,0CAUX;AACL,gCAAY,KAAZ;AACA,8BAAU,KAAV;AACH;AAbmB;AAAA;AAAA,oCAMT;AACP,2BAAO,YAAY,IAAnB;AACH;AARmB;;AAAA;AAAA;;AAgBxB,eAAO;AACH,mBAAO,EADJ;AAEH,wBAAa,gBAFV;AAGH,0BAAc,IAHX;AAIH,8BAAkB,IAJf;AAKH,yBAAa;AALV,SAAP;AAOH,KA1BsB,CAD3B;AA4BH;;;AC7BD;AAAA,MAKW,mBALX,GAKE,SAAS,mBAAT,CAA6B,MAA7B,EAAqC,KAArC,EAA4C,YAA5C,EAA0D;AACxD,QAAM,KAAK,IAAX;AACA,OAAG,IAAH,GAAU,aAAa,IAAb,CAAkB,OAAO,MAAP,CAAc,MAAhC,CAAV;AACA,OAAG,SAAH,GAAe,SAAf;AACA,OAAG,IAAH,GAAU,IAAV;AACA,OAAG,OAAH,GAAa,OAAb;;;;AAIA,aAAS,SAAT,GAAqB;AACnB,SAAG,IAAH,GAAU,EAAE,OAAO,EAAT,EAAa,WAAW,EAAxB,EAAV;AACD;;AAED,aAAS,IAAT,GAAgB;AACd,UAAI,GAAG,IAAH,CAAQ,GAAZ,EAAiB;AACf,qBAAa,MAAb,CAAoB,GAAG,IAAvB,EACG,IADH,CAEI,eAAO;AACL,aAAG,IAAH,GAAU,QAAQ,IAAR,CAAa,IAAI,IAAJ,CAAS,IAAtB,CAAV;AACA,gBAAM,MAAN,CAAa,SAAb,EAAwB,IAAI,IAAJ,CAAS,OAAjC;AACD,SALL,EAMI;AAAA,iBAAM,MAAM,MAAN,CAAa,QAAb,EAAuB,6BAAvB,CAAN;AAAA,SANJ;AAQD,OATD,MAUK;AACH,qBAAa,MAAb,CAAoB,GAAG,IAAvB,EACG,IADH,CAEI,eAAO;AACL,aAAG,IAAH,GAAU,IAAI,IAAJ,CAAS,IAAnB;AACA,gBAAM,MAAN,CAAa,SAAb,EAAwB,IAAI,IAAJ,CAAS,IAAT,CAAc,OAAtC;AACA,iBAAO,EAAP,CAAU,YAAV,EAAwB,EAAE,QAAQ,GAAG,IAAH,CAAQ,GAAlB,EAAxB;AACD,SANL,EAOI;AAAA,iBAAM,MAAM,MAAN,CAAa,QAAb,EAAuB,6BAAvB,CAAN;AAAA,SAPJ;AASD;AACF;;AAED,aAAS,OAAT,GAAmB;AACjB,mBAAa,OAAb,CAAqB,GAAG,IAAxB,EACG,IADH,CAEI;AAAA,eAAM,GAAG,SAAH,EAAN;AAAA,OAFJ;AAID;AACF,GAhDH;;AACE,UAAQ,MAAR,CAAe,oBAAf,EACG,UADH,CACc,qBADd,EACqC,mBADrC;;AAGA,sBAAoB,OAApB,GAA8B,CAAC,QAAD,EAAW,OAAX,EAAoB,cAApB,CAA9B;AA6CD;;;ACjDD;AAAA,MAKW,eALX,GAKE,SAAS,eAAT,CAAyB,MAAzB,EAAiC,YAAjC,EAA+C;AAC7C,QAAM,KAAK,IAAX;AACA,OAAG,KAAH,GAAW,aAAa,KAAxB;AACD,GARH;;AACE,UAAQ,MAAR,CAAe,gBAAf,EACG,UADH,CACc,iBADd,EACiC,eADjC;;AAGA,kBAAgB,OAAhB,GAA0B,CAAC,QAAD,EAAW,cAAX,CAA1B;AAKD;;;ACTD;AAAA,MAKW,YALX,GAKE,SAAS,YAAT,CAAsB,KAAtB,EAA6B,QAA7B,EAAuC;AACrC,QAAM,SAAY,QAAZ,WAAN;;AAEA,QAAM,UAAU;AACd,aAAO,EADO;AAEd,gBAAU,QAFI;AAGd,cAAQ,MAHM;AAId,cAAQ,MAJM;AAKd,eAAS,OALK;AAMd,kBAAY,UANE;AAOd,YAAM;AAPQ,KAAhB;;AAUA,WAAO,OAAP;;;;AAIA,aAAS,QAAT,GAAoB;AAClB,UAAM,eAAe,MAAM,GAAN,CAAU,MAAV,CAArB;;AAEA,mBACG,IADH,CACQ;AAAA,eAAO,QAAQ,KAAR,GAAgB,IAAI,IAA3B;AAAA,OADR;;AAGA,aAAO,YAAP;AACD;;AAED,aAAS,MAAT,CAAgB,IAAhB,EAAsB;AACpB,UAAM,eAAe,MAAM,IAAN,CAAW,MAAX,EAAmB;AACtC,cAAM;AADgC,OAAnB,CAArB;;AAIA,mBACG,IADH,CACQ,eAAO;AACT,gBAAQ,KAAR,CAAc,OAAd,CAAsB,IAAI,IAAJ,CAAS,IAA/B;AACH,OAHH;;AAKA,aAAO,YAAP;AACD;;AAED,aAAS,MAAT,CAAgB,IAAhB,EAAsB;AACpB,UAAM,eAAe,MAAM,GAAN,MAAa,MAAb,GAAsB,KAAK,GAA3B,EAAkC;AACrD,cAAM;AAD+C,OAAlC,CAArB;;AAIA,mBACG,IADH,CACQ,eAAO;AACX,gBAAQ,UAAR,CAAmB,IAAI,IAAJ,CAAS,IAAT,CAAc,GAAjC;AACA,gBAAQ,KAAR,CAAc,OAAd,CAAsB,IAAI,IAAJ,CAAS,IAA/B;AACD,OAJH;;AAMA,aAAO,YAAP;AACD;;AAED,aAAS,OAAT,CAAiB,IAAjB,EAAuB;AACrB,UAAM,eAAe,MAAM,MAAN,MAAgB,MAAhB,GAAyB,KAAK,GAA9B,CAArB;;AAEA,mBACG,IADH,CACQ,eAAO;AACT,gBAAQ,UAAR,CAAmB,IAAI,IAAJ,CAAS,IAAT,CAAc,GAAjC;AACH,OAHH;;AAKA,aAAO,YAAP;AACD;;AAED,aAAS,UAAT,CAAoB,EAApB,EAAwB;AACtB,WAAK,IAAI,IAAE,CAAX,EAAc,IAAI,QAAQ,KAAR,CAAc,MAAhC,EAAwC,GAAxC,EAA6C;AAC3C,YAAI,QAAQ,KAAR,CAAc,CAAd,EAAiB,GAAjB,KAAyB,EAA7B,EAAiC;AAC/B,iBAAO,QAAQ,KAAR,CAAc,MAAd,CAAqB,CAArB,EAAwB,CAAxB,CAAP;AACD;AACF;AACF;;AAED,aAAS,IAAT,CAAc,EAAd,EAAkB;AAChB,WAAK,IAAI,IAAE,CAAX,EAAc,IAAI,QAAQ,KAAR,CAAc,MAAhC,EAAwC,GAAxC,EAA6C;AAC3C,YAAI,QAAQ,KAAR,CAAc,CAAd,EAAiB,GAAjB,KAAyB,EAA7B,EAAiC;AAC/B,iBAAO,QAAQ,IAAR,CAAa,QAAQ,KAAR,CAAc,CAAd,CAAb,CAAP;AACD;AACF;AACF;AACF,GApFH;;AACE,UAAQ,MAAR,CAAe,gBAAf,EACG,OADH,CACW,cADX,EAC2B,YAD3B;;AAGA,eAAa,OAAb,GAAuB,CAAC,OAAD,EAAU,UAAV,CAAvB;AAiFD;;;ACrFD;AAAA;AAAA,QAKW,WALX,GAKE,SAAS,WAAT,CAAqB,cAArB,EAAqC;AACnC,qBAEC,KAFD,CAEO,OAFP,EAEgB;AACd,aAAK,QADS;AAEd,qBAAa,kBAFC;AAGd,oBAAY,iBAHE;AAId,sBAAc,IAJA;AAKd,iBAAS;AACP,uBAAa;AADN;AALK,OAFhB,EAYC,KAZD,CAYO,YAZP,EAYqB;AACnB,aAAK,UADc;AAEnB,qBAAa,kCAFM;AAGnB,oBAAY,qBAHO;AAInB,sBAAc;AAJK,OAZrB;AAkBD,KAxBH;;AAAA,QA2BW,WA3BX,GA2BE,SAAS,WAAT,CAAqB,YAArB,EAAmC;AACjC,aAAO,aAAa,QAAb,EAAP;AACD,KA7BH;;AACE,YAAQ,MAAR,CAAe,gBAAf,EACG,MADH,CACU,WADV;;AAGA,gBAAY,OAAZ,GAAsB,CAAC,gBAAD,CAAtB;;;AAsBA,gBAAY,OAAZ,GAAsB,CAAC,cAAD,CAAtB;AA1BF;AA8BC;;;;;;;AC9BD;AACI,YAAQ,MAAR,CAAe,kBAAf,EACK,UADL,CACgB,uBADhB,EACyC,CAErC,OAFqC,EAE5B,aAF4B,EAEb,cAFa,EAEG,WAFH,EAEgB,UAFhB,EAGrC,UAAC,KAAD,EAAQ,WAAR,EAAqB,YAArB,EAAmC,SAAnC,EAA8C,QAA9C,EAA2D;AAAA,YAEjD,qBAFiD;AAGnD,6CAAa;AAAA;;AACT,qBAAK,IAAL,GAAY;AACR,0BAAM,YAAY,IAAZ,CAAiB,IADf;AAER,8BAAU,YAAY,IAAZ,CAAiB;AAFnB,iBAAZ;AAIH;;AARkD;AAAA;AAAA,6CAUvC;AACR,iCAAa,UAAb,CAAwB,KAAK,IAA7B,EACC,KADD,CACO,eAAO;AACV,gCAAQ,GAAR,CAAY,GAAZ;AACH,qBAHD;AAIH;AAfkD;;AAAA;AAAA;;AAkBvD,eAAO,IAAI,qBAAJ,EAAP;AACH,KAtBoC,CADzC;AAyBH;;;;;;;AC1BD;AACI,YAAQ,MAAR,CAAe,kBAAf,EACK,UADL,CACgB,uBADhB,EACyC,CAErC,aAFqC,EAGrC,UAAC,WAAD,EAAiB;AAAA,YACP,qBADO;AAET,6CAAa;AAAA;AAEZ;;AAJQ;AAAA;AAAA,oCAME;AACP,2BAAO,YAAY,IAAnB;AACH;AARQ;;AAAA;AAAA;;AAWb,eAAO,IAAI,qBAAJ,EAAP;AACH,KAfoC,CADzC;AAiBH;;;;;;;AClBD;AAAA,QACU,iBADV;AAEQ,qCAAa;AAAA;;AACT,iBAAK,IAAL,GAAY,CACR;AACI,wBAAQ,QADZ;AAEI,uBAAO,cAFX;AAGI,2BAAW;AAHf,aADQ,EAMR;AACI,wBAAQ,EADZ;AAEI,uBAAO,cAFX;AAGI,2BAAW;AAHf,aANQ,CAAZ;AAYH;;AAfT;AAAA;AAAA,uCAiBmB,UAjBnB,EAiB8B;AAClB,qBAAK,IAAL,CAAU,OAAV,CAAkB,eAAO;AACrB,wBAAI,MAAJ,GAAa,EAAb;AACH,iBAFD;;AAIA,2BAAW,MAAX,GAAoB,QAApB;AACH;AAvBT;;AAAA;AAAA;;AA0BI,YAAQ,MAAR,CAAe,kBAAf,EACK,UADL,CACgB,mBADhB,EACqC,iBADrC;AAEH;;;AC5BD;AAAA,QAKa,aALb,GAKI,SAAS,aAAT,CAAuB,cAAvB,EAAsC;AAClC,uBAEC,KAFD,CAEO,SAFP,EAEkB;AACd,iBAAK,UADS;AAEd,yBAAa,sBAFC;AAGd,wBAAY,mBAHE;AAId,0BAAc;AAJA,SAFlB,EAQC,KARD,CAQO,cARP,EAQuB;AACnB,iBAAK,OADc;AAEnB,yBAAa,2BAFM;AAGnB,wBAAY,uBAHO;AAInB,0BAAc;AAJK,SARvB,EAcC,KAdD,CAcO,cAdP,EAcuB;AACnB,oBAAQ,SADW;AAEnB,iBAAK,gBAFc;AAGnB,yBAAa,2BAHM;AAInB,wBAAY,uBAJO;AAKnB,0BAAc;AALK,SAdvB;AAsBH,KA5BL;;AACI,YAAQ,MAAR,CAAe,kBAAf,EACK,MADL,CACY,aADZ;;AAGA,kBAAc,OAAd,GAAwB,CAAC,gBAAD,CAAxB;AAyBH;;;AC7BD;AAAA,QAKa,YALb,GAKI,SAAS,YAAT,CAAsB,cAAtB,EAAqC;AACjC,uBAEC,KAFD,CAEO,SAFP,EAEkB;AACd,iBAAK,UADS;AAEd,yBAAa,sBAFC;AAGd,wBAAY,kBAHE;AAId,0BAAc;AAJA,SAFlB;AAQH,KAdL;;AACI,YAAQ,MAAR,CAAe,iBAAf,EACK,MADL,CACY,YADZ;;AAGA,iBAAa,OAAb,GAAuB,CAAC,gBAAD,CAAvB;AAWH;;;;;;;ACfD;AACI,YAAQ,MAAR,CAAe,iBAAf,EACK,UADL,CACgB,kBADhB,EACoC,CAE5B,QAF4B,EAG5B,OAH4B,EAI5B,UAJ4B,EAK5B,aAL4B,EAM5B,WAN4B,EAO5B,OAP4B,EAQ5B,cAR4B,EAS5B,UAAC,MAAD,EACC,KADD,EAEC,QAFD,EAGC,WAHD,EAIC,SAJD,EAKC,KALD,EAMC,YAND,EAMkB;AAAA,YACZ,gBADY;AAEd,wCAAa;AAAA;;AACT,qBAAK,IAAL,GAAY;AACR,8BAAU,EADF;AAER,8BAAU;AAFF,iBAAZ;AAIH;;AAPa;AAAA;AAAA,yCASN;AACJ,iCAAa,MAAb,CAAoB,KAAK,IAAzB,EAA+B,IAA/B,CAAoC,eAAO;AACvC,+BAAO,EAAP,CAAU,cAAV;AACH,qBAFD,EAGC,KAHD,CAGO,eAAO;AACV,8BAAM,MAAN,CAAa,QAAb,EAAuB,IAAI,UAA3B,EAAuC,IAAvC;AACH,qBALD;AAMH;AAhBa;;AAAA;AAAA;;AAmBlB,eAAO,IAAI,gBAAJ,EAAP;AACH,KAnC+B,CADpC;AAqCH;;;;;;;ACtCD;AACE,UAAQ,MAAR,CAAe,iBAAf,EACG,SADH,CACa,QADb,EACuB,CAEnB,QAFmB,EAET,cAFS,EAEO,OAFP,EAGnB,UAAC,MAAD,EAAS,YAAT,EAAuB,KAAvB,EAAiC;AAAA,QAEzB,gBAFyB;AAG7B,kCAAc;AAAA;;AACZ,aAAK,IAAL,GAAY,EAAZ;AACD;;AAL4B;AAAA;AAAA,iCAMpB;AACP,uBAAa,MAAb,CAAoB,KAAK,IAAzB,EACK,IADL,CACU,YAAM;AACR,mBAAO,EAAP,CAAU,OAAV;AACH,WAHL,EAIK,KAJL,CAIW,eAAO;AACV,oBAAQ,GAAR,CAAY,GAAZ;AACA,kBAAM,MAAN,CAAa,QAAb,EAAuB,IAAI,IAAJ,CAAS,OAAhC,EAAyC,IAAzC;AACH,WAPL;AAQD;AAf4B;;AAAA;AAAA;;AAkB/B,WAAO;AACL,aAAO,EADF;AAEL,kBAAY,gBAFP;AAGL,oBAAc,IAHT;AAIL,wBAAkB,IAJb;AAKL,mBAAa;AALR,KAAP;AAOD,GA5BkB,CADvB;AA+BD;;;;;;;AChCD;AACE,UAAQ,MAAR,CAAe,gBAAf,EACG,OADH,CACW,WADX,EACwB,CAAC,QAAD,EAAW,kBAAU;AAAA,QAEnC,SAFmC;AAGvC,2BAAc;AAAA;;AACZ,aAAK,WAAL,GAAmB,IAAI,MAAJ,CAAW,WAAX,CAAnB;AACD;;AALsC;AAAA;AAAA,gCAY/B;AACN,eAAK,WAAL,CAAiB,KAAjB;AACD;AAdsC;AAAA;AAAA,0BAM7B,KAN6B,EAMtB;AACf,eAAK,WAAL,CAAiB,IAAjB,GAAwB,KAAxB;AACD,SARsC;AAAA,4BAS3B;AACV,iBAAO,KAAK,WAAL,CAAiB,IAAxB;AACD;AAXsC;;AAAA;AAAA;;AAgBzC,WAAO,IAAI,SAAJ,EAAP;AAED,GAlBqB,CADxB;AAoBD;;;;;;;ACrBD;AACE,UAAQ,MAAR,CAAe,gBAAf,EACG,OADH,CACW,aADX,EAC0B,CAAC,QAAD,EAAW,kBAAU;AAAA,QAErC,WAFqC;AAGzC,6BAAc;AAAA;;AACZ,aAAK,UAAL,GAAkB,IAAI,MAAJ,CAAW,MAAX,CAAlB;AACD;;AALwC;AAAA;AAAA,gCAYjC;AACN,eAAK,UAAL,CAAgB,KAAhB;AACD;AAdwC;AAAA;AAAA,0BAMhC,IANgC,EAM1B;AACb,eAAK,UAAL,CAAgB,IAAhB,GAAuB,IAAvB;AACD,SARwC;AAAA,4BAS9B;AACT,iBAAO,KAAK,UAAL,CAAgB,IAAvB;AACD;AAXwC;;AAAA;AAAA;;AAgB3C,WAAO,IAAI,WAAJ,EAAP;AAED,GAlBuB,CAD1B;AAoBD;;;ACrBD;AAAA,MAKW,WALX,GAKE,SAAS,WAAT,CAAqB,cAArB,EAAqC;AACnC,mBAEG,KAFH,CAES,SAFT,EAEoB;AAChB,WAAK,UADW;AAEhB,gBAAU;AAFM,KAFpB;AAMD,GAZH;;AACE,UAAQ,MAAR,CAAe,gBAAf,EACG,MADH,CACU,WADV;;AAGA,cAAY,OAAZ,GAAsB,CAAC,gBAAD,CAAtB;AASD;;;;;;;ACbD;AACE,YAAQ,MAAR,CAAe,gBAAf,EACG,OADH,CACW,cADX,EAC2B,CACvB,OADuB,EAEvB,UAFuB,EAGvB,WAHuB,EAIvB,aAJuB,EAKvB,UAAC,KAAD,EAAQ,QAAR,EAAkB,SAAlB,EAA6B,WAA7B,EAA6C;;AAE3C,YAAM,aAAgB,QAAhB,UAAN;AACA,YAAM,gBAAmB,QAAnB,aAAN;;AAH2C,YAKrC,YALqC;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAAA,uCAQlC,IARkC,EAQ5B;AACT,2BAAO,MAAM,IAAN,CAAW,UAAX,EAAuB;AAC5B;AAD4B,qBAAvB,EAGN,IAHM,CAGD,eAAO;AACT,kCAAU,KAAV,GAAkB,IAAI,IAAJ,CAAS,SAA3B;AACA,oCAAY,IAAZ,GAAmB,IAAI,IAAJ,CAAS,IAA5B;AACH,qBANM,CAAP;AAOH;AAhBwC;AAAA;AAAA,2CAkB9B,IAlB8B,EAkBzB;AACZ,2BAAO,MAAM;AACT,gCAAQ,OADC;AAET,6BAAK,UAFI;AAGT,8BAAM;AACF,mCAAO,UAAU,KADf;AAEF,qCAAS;AAFP;AAHG,qBAAN,EAQN,IARM,CAQD,eAAO;AACT,gCAAQ,GAAR,CAAY,GAAZ;AACA,oCAAY,IAAZ,GAAmB,IAAI,IAAJ,CAAS,IAA5B;AACH,qBAXM,CAAP;AAYH;AA/BwC;AAAA;AAAA,uCAiClC,IAjCkC,EAiC7B;AACV,4BAAQ,GAAR,CAAY,IAAZ;AACA,2BAAO,MAAM,IAAN,CAAW,aAAX,EAA0B,EAAC,UAAD,EAA1B,EACF,IADE,CACG,eAAO;AACT,oCAAY,IAAZ,GAAmB,IAAI,IAAJ,CAAS,IAA5B;AACA,kCAAU,KAAV,GAAkB,IAAI,IAAJ,CAAS,SAA3B;AACH,qBAJE,CAAP;AAKD;AAxCwC;;AAAA;AAAA;;AA0C3C,eAAO,IAAI,YAAJ,EAAP;AAED,KAjDsB,CAD3B;AAoDD","file":"bundle.js","sourcesContent":["{\n  angular.module('meganote', [\n    'ui.router',\n    'ngFlash',\n    'textAngular',\n    'meganote.notes',\n    'meganote.notesForm',\n    'meganote.signUp',\n    'meganote.users',\n    'meganote.navbar',\n    'meganote.home',\n    'meganote.profile',\n    'meganote.signIn',\n  ])\n    .config(config);\n\n  config.$inject = ['$urlRouterProvider'];\n  function config($urlRouterProvider) {\n    $urlRouterProvider.otherwise('/notes/');\n  }\n}\n","{\n    angular.module('meganote.home', []);\n}\n","{\n    angular.module('meganote.navbar', []);\n}\n","{\n  angular.module('meganote.notesForm', []);\n}\n","{\n  angular.module('meganote.notes', []);\n}\n","{\n    angular.module('meganote.profile', []);\n}\n","{\n    angular.module('meganote.signIn', []);\n}\n","{\n  angular.module('meganote.signUp', []);\n}\n","{\n  angular.module('meganote.users', []);\n}\n","{\n    angular.module('meganote')\n        .factory('Cacher', ['$window', $window => {\n            class Cacher {\n                constructor(_key){\n                    this._key = _key;\n                    this._data = null;\n                }\n\n                set data(data){\n                    $window.localStorage.setItem(this._key, \n                        JSON.stringify({data}));\n                    return this._data = data;\n                }\n\n                get data(){\n                    this._data === null && \n                        ($window.localStorage.getItem(this._key) !== null) &&\n                        (this._data = JSON.parse($window.localStorage.getItem(this._key)).data);\n\n                    return this._data;\n                }\n\n                reset(){\n                    this._data = null;\n                    $window.localStorage.removeItem(this._key);\n                }\n            }\n    \n            return Cacher;\n        }]);\n}\n","{\n    angular.module('meganote')\n        .constant('API_BASE', 'https://alex-aralis-meganote-server.herokuapp.com/api/v1/');\n}\n\n","{\n    angular.module('meganote')\n        .factory('AuthInterceptor', AuthInterceptor)\n        .config(interceptorConfig);\n\n    AuthInterceptor.$inject = ['AuthToken', 'API_BASE'];\n    function AuthInterceptor(AuthToken, API_BASE){\n        return {\n            request(config){\n                const token = AuthToken.token;\n                \n                if(token && config.url.includes(API_BASE)){\n                    config.headers.Authorization = token;\n                    \n                }\n\n                return config;\n            },\n        };\n    }\n\n    interceptorConfig.$inject = ['$httpProvider'];\n    function interceptorConfig($httpProvider){\n        return $httpProvider.interceptors.push('AuthInterceptor');\n    }\n}\n","{\n    angular.module('meganote.home')\n        .config(homeConfig);\n\n    homeConfig.$inject = ['$stateProvider'];\n    function homeConfig($stateProvider){\n        $stateProvider\n        \n        .state('home', {\n            url: '/home',\n            templateUrl: 'home/home.html',\n        });\n    }\n}\n","{\n    angular.module('meganote.navbar')\n        .directive('aaNavbar', [\n\n        'AuthToken', 'CurrentUser', '$state',\n        (AuthToken, CurrentUser) => {\n            class NavbarController {\n                constructor() {\n                    \n                }\n    \n                get user (){\n                    return CurrentUser.user;\n                }\n\n                signOut(){\n                    CurrentUser.clear();\n                    AuthToken.clear();\n                }\n            }\n\n            return {\n                scope: {},\n                controller:  NavbarController,\n                controllerAs: 'vm',\n                bindToController: true,\n                templateUrl: 'layout/navbar.html',\n            };\n        }]);\n}\n","{\n  angular.module('meganote.notesForm')\n    .controller('NotesFormController', NotesFormController);\n\n  NotesFormController.$inject = ['$state', 'Flash', 'NotesService'];\n  function NotesFormController($state, Flash, NotesService) {\n    const vm = this;\n    vm.note = NotesService.find($state.params.noteId);\n    vm.clearForm = clearForm;\n    vm.save = save;\n    vm.destroy = destroy;\n\n    /////////////////\n\n    function clearForm() {\n      vm.note = { title: '', body_html: '' };\n    }\n\n    function save() {\n      if (vm.note._id) {\n        NotesService.update(vm.note)\n          .then(\n            res => {\n              vm.note = angular.copy(res.data.note);\n              Flash.create('success', res.data.message);\n            },\n            () => Flash.create('danger', 'Oops! Something went wrong.')\n          );\n      }\n      else {\n        NotesService.create(vm.note)\n          .then(\n            res => {\n              vm.note = res.data.note;\n              Flash.create('success', res.data.note.message);\n              $state.go('notes.form', { noteId: vm.note._id });\n            },\n            () => Flash.create('danger', 'Oops! Something went wrong.')\n          );\n      }\n    }\n\n    function destroy() {\n      NotesService.destroy(vm.note)\n        .then(\n          () => vm.clearForm()\n        );\n    }\n  }\n}\n","{\n  angular.module('meganote.notes')\n    .controller('NotesController', NotesController);\n\n  NotesController.$inject = ['$scope', 'NotesService'];\n  function NotesController($scope, NotesService) {\n    const vm = this;\n    vm.notes = NotesService.notes;\n  }\n}\n","{\n  angular.module('meganote.notes')\n    .factory('NotesService', NotesService);\n\n  NotesService.$inject = ['$http', 'API_BASE'];\n  function NotesService($http, API_BASE) {\n    const apiURI = `${API_BASE}notes/`;\n\n    const service = {\n      notes: [],\n      getNotes: getNotes,\n      create: create,\n      update: update,\n      destroy: destroy,\n      removeById: removeById,\n      find: find,\n    };\n\n    return service;\n\n    //////////////////////\n\n    function getNotes() {\n      const notesPromise = $http.get(apiURI);\n\n      notesPromise\n        .then(res => service.notes = res.data);\n\n      return notesPromise;\n    }\n\n    function create(note) {\n      const notesPromise = $http.post(apiURI, {\n        note: note\n      });\n\n      notesPromise\n        .then(res => {\n            service.notes.unshift(res.data.note);\n        });\n\n      return notesPromise;\n    }\n\n    function update(note) {\n      const notesPromise = $http.put(`${apiURI}${note._id}`, {\n        note: note\n      });\n\n      notesPromise\n        .then(res => {\n          service.removeById(res.data.note._id);\n          service.notes.unshift(res.data.note);\n        });\n\n      return notesPromise;\n    }\n\n    function destroy(note) {\n      const notesPromise = $http.delete(`${apiURI}${note._id}`);\n\n      notesPromise\n        .then(res => {\n            service.removeById(res.data.note._id);\n        });\n\n      return notesPromise;\n    }\n\n    function removeById(id) {\n      for (let i=0; i < service.notes.length; i++) {\n        if (service.notes[i]._id === id) {\n          return service.notes.splice(i, 1);\n        }\n      }\n    }\n\n    function find(id) {\n      for (let i=0; i < service.notes.length; i++) {\n        if (service.notes[i]._id === id) {\n          return angular.copy(service.notes[i]);\n        }\n      }\n    }\n  }\n}\n","{\n  angular.module('meganote.notes')\n    .config(notesConfig);\n\n  notesConfig.$inject = ['$stateProvider'];\n  function notesConfig($stateProvider) {\n    $stateProvider\n\n    .state('notes', {\n      url: '/notes',\n      templateUrl: 'notes/notes.html',\n      controller: 'NotesController',\n      controllerAs: 'vm',\n      resolve: {\n        notesLoaded: notesLoaded\n      }\n    })\n\n    .state('notes.form', {\n      url: '/:noteId',\n      templateUrl: 'notes/notes-form/notes-form.html',\n      controller: 'NotesFormController',\n      controllerAs: 'vm',\n    });\n  }\n\n  notesLoaded.$inject = ['NotesService'];\n  function notesLoaded(NotesService) {\n    return NotesService.getNotes();\n  }\n}\n","{\n    angular.module('meganote.profile')\n        .controller('ProfileEditController', [ \n\n        '$http', 'CurrentUser', 'UsersService', 'AuthToken', 'API_BASE',\n        ($http, CurrentUser, UsersService, AuthToken, API_BASE) => {\n            \n            class ProfileEditController{\n                constructor(){\n                    this.user = {\n                        name: CurrentUser.user.name,\n                        username: CurrentUser.user.username,\n                    };\n                }\n                \n                updateUser(){\n                    UsersService.updateUser(this.user)\n                    .catch(err => {\n                        console.log(err);\n                    });\n                }\n            }\n\n            return new ProfileEditController;\n        }\n    ]);\n}\n","{\n    angular.module('meganote.profile')\n        .controller('ProfileInfoController', [\n\n        'CurrentUser',\n        (CurrentUser) => {\n            class ProfileInfoController {\n                constructor(){\n\n                }\n\n                get user (){\n                    return CurrentUser.user;\n                }\n            }\n\n            return new ProfileInfoController;\n        }]);\n}\n","{\n    class ProfileController{\n        constructor(){\n            this.tabs = [\n                {\n                    active: 'active',\n                    state: 'profile.info',\n                    innerText: 'Info',\n                },\n                {\n                    active: '',\n                    state: 'profile.edit',\n                    innerText: 'Edit',\n                },\n            ];\n        }    \n\n        tabClicked(clickedTab){\n            this.tabs.forEach(tab => {\n                tab.active = '';\n            });\n\n            clickedTab.active = 'active';\n        }\n    }\n\n    angular.module('meganote.profile')\n        .controller('ProfileController', ProfileController);\n}\n","{\n    angular.module('meganote.profile')\n        .config(profileConfig);\n\n    profileConfig.$inject = ['$stateProvider'];\n    function profileConfig($stateProvider){\n        $stateProvider\n\n        .state('profile', {\n            url: '/profile',\n            templateUrl: 'profile/profile.html',\n            controller: 'ProfileController',\n            controllerAs: 'vm',\n        })\n        .state('profile.info', {\n            url: '/info',\n            templateUrl: 'profile/profile-info.html',\n            controller: 'ProfileInfoController',\n            controllerAs: 'vm',\n        })\n        .state('profile.edit', {\n            parent: 'profile',\n            url: '^/profile/edit',\n            templateUrl: 'profile/profile-edit.html',\n            controller: 'ProfileEditController',\n            controllerAs: 'vm',\n        });\n        \n    }\n}\n","{\n    angular.module('meganote.signIn')\n        .config(signInConfig);\n\n    signInConfig.$inject = ['$stateProvider'];\n    function signInConfig($stateProvider){\n        $stateProvider\n\n        .state('sign-in', {\n            url: '/sign-in',\n            templateUrl: 'sign-in/sign-in.html',\n            controller: 'SignInController',\n            controllerAs: 'vm',\n        });\n    }\n}\n\n\n","{\n    angular.module('meganote.signIn')\n        .controller('SignInController', [\n            \n            '$state', \n            '$http', \n            'API_BASE', \n            'CurrentUser', \n            'AuthToken', \n            'Flash', \n            'UsersService',\n            ($state, \n             $http, \n             API_BASE, \n             CurrentUser, \n             AuthToken, \n             Flash,\n             UsersService) => {\n            class SignInController {\n                constructor(){\n                    this.user = {\n                        username: '',\n                        password: '',\n                    };\n                }\n\n                signIn(){\n                    UsersService.signIn(this.user).then(res => {\n                        $state.go('profile.info');\n                    })\n                    .catch(err => {\n                        Flash.create('danger', err.statusText, 3000);\n                    });\n                }\n            }\n\n            return new SignInController;\n        }]);\n}\n","{\n  angular.module('meganote.signUp')\n    .directive('signUp', [\n\n      '$state', 'UsersService', 'Flash',\n      ($state, UsersService, Flash) => {\n\n        class SignUpController {\n          constructor() {\n            this.user = {};\n          }\n          submit() {\n            UsersService.create(this.user)\n                .then(() => {\n                    $state.go('notes');\n                })\n                .catch(err => {\n                    console.log(err);\n                    Flash.create('danger', err.data.message, 3000);\n                });\n          }\n        }\n\n        return {\n          scope: {},\n          controller: SignUpController,\n          controllerAs: 'vm',\n          bindToController: true,\n          templateUrl: '/sign-up/sign-up.html',\n        };\n      }\n    ]);\n}\n","{\n  angular.module('meganote.users')\n    .service('AuthToken', ['Cacher', Cacher => {\n\n      class AuthToken {\n        constructor() {\n          this.tokenCacher = new Cacher('authToken');\n        }\n        set token(token) {\n          this.tokenCacher.data = token;\n        }\n        get token() {\n          return this.tokenCacher.data;\n        }\n        clear() {\n          this.tokenCacher.reset();\n        }\n      }\n      return new AuthToken();\n\n    }]);\n}\n","{\n  angular.module('meganote.users')\n    .service('CurrentUser', ['Cacher', Cacher => {\n\n      class CurrentUser {\n        constructor() {\n          this.userCacher = new Cacher('user');\n        }\n        set user(user) {\n          this.userCacher.data = user;\n        }\n        get user() {\n          return this.userCacher.data;\n        }\n        clear() {\n          this.userCacher.reset();\n        }\n      }\n      return new CurrentUser();\n\n    }]);\n}\n","{\n  angular.module('meganote.users')\n    .config(usersConfig);\n\n  usersConfig.$inject = ['$stateProvider'];\n  function usersConfig($stateProvider) {\n    $stateProvider\n\n      .state('sign-up', {\n        url: '/sign-up',\n        template: '<sign-up></sign-up>',\n      });\n  }\n}\n","{\n  angular.module('meganote.users')\n    .service('UsersService', [\n      '$http',\n      'API_BASE',\n      'AuthToken',\n      'CurrentUser',\n      ($http, API_BASE, AuthToken, CurrentUser) => {\n\n        const apiUserURI = `${API_BASE}users`;\n        const apiSessionURI = `${API_BASE}sessions`;\n\n        class UsersService {\n\n          // Sign Up\n          create(user) {\n              return $http.post(apiUserURI, {\n                user,\n              })\n              .then(res => {\n                  AuthToken.token = res.data.authToken;\n                  CurrentUser.user = res.data.user;\n              });\n          }\n\n          updateUser(user){\n              return $http({\n                  method: 'PATCH',\n                  url: apiUserURI,\n                  data: {\n                      token: AuthToken.token,\n                      newUser: user,\n                  },\n              })\n              .then(res => {\n                  console.log(res);\n                  CurrentUser.user = res.data.user;\n              });\n          }\n\n          signIn(user){\n            console.log(user);\n            return $http.post(apiSessionURI, {user})\n                .then(res => {\n                    CurrentUser.user = res.data.user;\n                    AuthToken.token = res.data.authToken;\n                });\n          }\n        }\n        return new UsersService();\n\n      }\n    ]);\n}\n"],"sourceRoot":"/source/"}